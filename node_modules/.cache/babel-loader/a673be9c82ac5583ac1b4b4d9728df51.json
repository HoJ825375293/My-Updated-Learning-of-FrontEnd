{"ast":null,"code":"var _jsxFileName = \"/Users/jaylon_ho/Documents/GitHub/My-Updated-Learning-of-FrontEnd/src/components/music/Content.js\";\nimport React from 'react';\nimport { //AudioMutedOutlined,\nArrowLeftOutlined, StepBackwardOutlined, StepForwardOutlined, PlayCircleFilled, SoundOutlined, PauseCircleFilled } from '@ant-design/icons'; //import { Button } from 'antd';\n\nimport \"./content.css\";\n\nvar formatTime = function (seconds) {\n  var h = 0,\n      i = 0,\n      s = Math.floor(seconds);\n  h = Math.floor(s / 3600);\n  i = Math.floor(s % 3600 / 60);\n  s = s % 3600 % 60;\n  return {\n    H: h = h < 10 ? \"0\" + h : h,\n    I: i = i < 10 ? \"0\" + i : i,\n    S: s = s < 10 ? \"0\" + s : s\n  };\n};\n\nvar playn = function () {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"play\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PlayCircleFilled, {\n    style: {\n      color: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 31\n    }\n  }));\n};\n\nvar pausen = function () {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pause\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PauseCircleFilled, {\n    style: {\n      color: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 32\n    }\n  }));\n};\n\nfunction getDom(selector) {\n  return document.querySelectorAll(selector);\n}\n/*\nfunction bindEvent(ele, evnetType, callback) {\n    console.log(ele, evnetType, callback)\n    if(ele === undefined){\n        console.log(\"bindEvent undefined\")\n    }else if(typeof ele.addEventListener == \"function\"){\n        ele.addEventListener(evnetType, callback, false)\n    }else if(typeof ele.attachEvent == \"function\"){\n        ele.attachEvent(evnetType, callback, false)\n    }else{\n        ele.addEventListener(evnetType, callback, false)\n    }\n}\n*/\n\n\nfunction init() {\n  var audio = new Audio(\"./NewRomantics.flac\");\n  var playBtn = document.getElementById(\"playBox\"),\n      progressBox = getDom(\".progressBox\")[0],\n      progressBar = getDom(\".progressBar\")[0],\n      curTime = getDom(\".curTime\")[0],\n      songTime = getDom(\".totalTime\")[0],\n      singerName = getDom(\"#singerName\")[0],\n      songName = getDom(\"#songName\")[0],\n      volume = getDom(\".volume\")[0],\n      volBar = getDom(\"#volBar\")[0],\n      muteBtn = getDom(\"#muteBtn\");\n  playBtn.addEventListener(\"click\", function () {\n    mainPlay();\n  }, false);\n  var isDrag = false;\n  var index = 0;\n  var audio_m = 230.4,\n      audio_s = 0,\n      curH = 0,\n      curM = 0,\n      curS = 0;\n  var musicData = [{\n    \"src\": \"./NewRomantics.flac\",\n    \"bg\": \"./musicDisc.jpg\",\n    \"songNmae\": \"New Romantics\",\n    \"singerName\": \"Taylor Swift\",\n    \"lm\": 3,\n    \"ls\": 50\n  }];\n\n  function initPlay() {\n    audio.pause();\n    audio.volume = Math.round(volBar.offsetWidth / volume.offsetWidth * 100) / 100;\n  }\n\n  function mainPlay() {\n    let temp = document.getElementById(\"playBox\").getElementsByTagName(\"div\")[0];\n    console.log(temp);\n\n    if (temp.className === \"play\") {\n      //playBtn = <div className=\"playBox\">{ pausen() }</div>\n      audio.play();\n    } else {\n      //playBtn = <div className=\"playBox\">{ playn() }</div>\n      audio.pause();\n    }\n  }\n  /*\n  audio.addEventListener(\"timeupdate\", function() {\n      console.log(\"1\")\n      if(!isDrag){\n          \n          curM = Math.floor(audio.currentTime / 60);\n          curS = Math.round(audio.currentTime - curM * 60);\n          curM = curM < 10 ? \"0\" + curM : curM;\n          curS = curS < 10 ? \"0\" + curS : curS;\n          curTime.innerHTML = curM + \":\" + curS;\n           var curLong = Math.round(audio.currentTime / audio.duration * (progressBox.offsetWidth - 16))\n          progressBar.style.width = curLong + \"px\";\n          \n      }\n  }, false)\n  */\n\n\n  initPlay();\n}\n\nclass Content extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.play = () => {\n      this.setState({\n        isPlay: !this.state.isPlay\n      });\n    };\n\n    this.controlAudio = (type, value) => {\n      const audio = document.getElementById(\"audio\");\n\n      switch (type) {\n        case 'totalTime':\n          this.setState({\n            totalTime: audio.duration\n          });\n          break;\n\n        case 'play':\n          audio.play();\n          this.setState({\n            isPlay: true\n          });\n          break;\n\n        case 'pause':\n          audio.pause();\n          this.setState({\n            isPlay: false\n          });\n          break;\n\n        case 'muted':\n          this.setState({\n            isMuted: !audio.muted\n          });\n          audio.muted = !audio.muted;\n          break;\n\n        case 'changeCurrentTime':\n          this.setState({\n            currentTime: value\n          });\n          audio.currentTime = value;\n\n          if (value === audio.duration) {\n            this.setState({\n              isPlay: false\n            });\n          }\n\n          break;\n\n        case 'getCurrentTime':\n          this.setState({\n            currentTime: audio.currentTime\n          });\n\n          if (audio.currentTime === audio.duration) {\n            this.setState({\n              isPlay: false\n            });\n          }\n\n          break;\n\n        case 'changeVolume':\n          audio.volume = value / 100;\n          this.setState({\n            volume: value,\n            isMuted: !value\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.handlePlay = () => {\n      let {\n        isPlay\n      } = this.state;\n      console.log(this.controlAudio);\n      document.getElementById(\"playBox\").addEventListener(\"click\", function () {\n        if (isPlay) {\n          this.controlAudio(\"pause\", 0);\n        } else {\n          this.controlAudio(\"play\", 0);\n        }\n      });\n    };\n\n    this.state = {\n      isPlay: false,\n      isMuted: false,\n      volume: 100,\n      totalTime: 0,\n      currentTime: 0\n    };\n  }\n\n  millisecondToDate(time) {\n    const second = Math.floor(time % 60);\n    let minite = Math.floor(time / 60);\n    return `${minite}:${second >= 10 ? second : `0${second}`}`;\n  }\n\n  componentDidMount() {\n    this.handlePlay();\n  }\n\n  render() {\n    let {\n      isPlay,\n      isMuted,\n      volume,\n      totalTime,\n      currentTime\n    } = this.state;\n    let audio_time = currentTime / totalTime * 100;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"audio\", {\n      id: \"audio\",\n      src: \"./NewRomantics.flac\",\n      preload: \"true\",\n      onCanPlay: () => this.controlAudio('totalTime'),\n      onTimeUpdate: e => this.controlAudio('getCurrentTime'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 21\n      }\n    }, \"\\u60A8\\u7684\\u6D4F\\u89C8\\u5668\\u4E0D\\u652F\\u6301 audio \\u6807\\u7B7E\\u3002\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"headBox clearFix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"goBack\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ArrowLeftOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"songName\",\n      id: \"songName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 14\n      }\n    }, \"New Romantics\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"singer\",\n      id: \"singerName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 14\n      }\n    }, \"Taylor Swift\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"discBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"volume\",\n      id: \"volume\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"volBar\",\n      id: \"volBar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"volArc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"muteBtn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      id: \"volumeTag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 32\n      }\n    }, /*#__PURE__*/React.createElement(SoundOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 50\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"disc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"controlBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progressBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"curTime\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 29\n      }\n    }, \"0:00\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progressBar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"progressArc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"totalTime\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 29\n      }\n    }, \"3:50\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"prev\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(StepBackwardOutlined, {\n      style: {\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 47\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"playBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 25\n      }\n    }, playn()), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"next\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(StepForwardOutlined, {\n      style: {\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 47\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"blur\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Content;","map":{"version":3,"sources":["/Users/jaylon_ho/Documents/GitHub/My-Updated-Learning-of-FrontEnd/src/components/music/Content.js"],"names":["React","ArrowLeftOutlined","StepBackwardOutlined","StepForwardOutlined","PlayCircleFilled","SoundOutlined","PauseCircleFilled","formatTime","seconds","h","i","s","Math","floor","H","I","S","playn","color","pausen","getDom","selector","document","querySelectorAll","init","audio","Audio","playBtn","getElementById","progressBox","progressBar","curTime","songTime","singerName","songName","volume","volBar","muteBtn","addEventListener","mainPlay","isDrag","index","audio_m","audio_s","curH","curM","curS","musicData","initPlay","pause","round","offsetWidth","temp","getElementsByTagName","console","log","className","play","Content","Component","constructor","props","setState","isPlay","state","controlAudio","type","value","totalTime","duration","isMuted","muted","currentTime","handlePlay","millisecondToDate","time","second","minite","componentDidMount","render","audio_time","e"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { \n//AudioMutedOutlined,\nArrowLeftOutlined,\nStepBackwardOutlined,\nStepForwardOutlined,\nPlayCircleFilled,\nSoundOutlined,\nPauseCircleFilled\n} from '@ant-design/icons';\n//import { Button } from 'antd';\nimport \"./content.css\";\n\nvar formatTime = function(seconds) {\n    var h = 0,\n        i = 0,\n        s = Math.floor(seconds);\n        h = Math.floor(s / 3600);\n        i = Math.floor((s % 3600) / 60);\n        s = s % 3600 % 60\n    \n    return{\n        H: h = h < 10 ? \"0\" + h : h,\n        I: i = i < 10 ? \"0\" + i : i,\n        S: s = s < 10 ? \"0\" + s : s\n    }\n}\n\nvar playn = function () {\n    return (\n        <div className=\"play\"><PlayCircleFilled style={{color:\"black\"}}/></div>\n    )\n}\n\nvar pausen = function () {\n    return (\n        <div className=\"pause\"><PauseCircleFilled style={{color:\"black\"}}/></div>\n    )\n}\n\nfunction getDom(selector) {\n    return document.querySelectorAll(selector);\n}\n\n/*\nfunction bindEvent(ele, evnetType, callback) {\n    console.log(ele, evnetType, callback)\n    if(ele === undefined){\n        console.log(\"bindEvent undefined\")\n    }else if(typeof ele.addEventListener == \"function\"){\n        ele.addEventListener(evnetType, callback, false)\n    }else if(typeof ele.attachEvent == \"function\"){\n        ele.attachEvent(evnetType, callback, false)\n    }else{\n        ele.addEventListener(evnetType, callback, false)\n    }\n}\n*/\n\nfunction init() {\n    var audio = new Audio(\"./NewRomantics.flac\");\n\n    var playBtn = document.getElementById(\"playBox\"),\n        progressBox = getDom(\".progressBox\")[0],\n        progressBar = getDom(\".progressBar\")[0],\n        curTime = getDom(\".curTime\")[0],\n        songTime = getDom(\".totalTime\")[0],\n        singerName = getDom(\"#singerName\")[0],\n        songName = getDom(\"#songName\")[0],\n        volume = getDom(\".volume\")[0],\n        volBar = getDom(\"#volBar\")[0],\n        muteBtn = getDom(\"#muteBtn\");\n\n    playBtn.addEventListener(\"click\", function() {\n        mainPlay()\n    }, false)\n\n    \n    var isDrag = false;\n    var index = 0;\n    var audio_m = 230.4,\n        audio_s = 0,\n        curH = 0,\n        curM = 0,\n        curS = 0;\n    var musicData = [\n        {\n            \"src\":\"./NewRomantics.flac\",\n            \"bg\":\"./musicDisc.jpg\",\n            \"songNmae\": \"New Romantics\",\n            \"singerName\": \"Taylor Swift\",\n            \"lm\": 3,\n            \"ls\": 50\n        }\n    ]\n\n    function initPlay() {\n        audio.pause();\n        audio.volume = Math.round(volBar.offsetWidth / volume.offsetWidth * 100) / 100;\n    }\n\n    function mainPlay() {\n        let temp = document.getElementById(\"playBox\").getElementsByTagName(\"div\")[0]\n        console.log(temp)\n        if(temp.className === \"play\"){\n            //playBtn = <div className=\"playBox\">{ pausen() }</div>\n            audio.play()\n        }else{\n            //playBtn = <div className=\"playBox\">{ playn() }</div>\n            audio.pause()\n        }\n    }\n\n    /*\n    audio.addEventListener(\"timeupdate\", function() {\n        console.log(\"1\")\n        if(!isDrag){\n            \n            curM = Math.floor(audio.currentTime / 60);\n            curS = Math.round(audio.currentTime - curM * 60);\n            curM = curM < 10 ? \"0\" + curM : curM;\n            curS = curS < 10 ? \"0\" + curS : curS;\n            curTime.innerHTML = curM + \":\" + curS;\n\n            var curLong = Math.round(audio.currentTime / audio.duration * (progressBox.offsetWidth - 16))\n            progressBar.style.width = curLong + \"px\";\n            \n        }\n    }, false)\n    */\n    initPlay()\n}\n\nclass Content extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isPlay: false,\n            isMuted: false,\n            volume: 100,\n            totalTime: 0,\n            currentTime: 0,\n        };\n    }\n\n    play = () => {\n        this.setState({\n            isPlay: !this.state.isPlay\n        })\n    }\n\n    millisecondToDate(time) {\n        const second = Math.floor(time % 60);\n        let minite = Math.floor(time / 60);\n        return `${minite}:${second >= 10 ? second : `0${second}`}`;\n    }\n\n    controlAudio = (type, value) => {\n        const audio = document.getElementById(\"audio\");\n        switch(type) {\n            case 'totalTime':\n                this.setState({\n                    totalTime: audio.duration\n                });\n                break;\n            case 'play':\n                audio.play();\n                this.setState({\n                    isPlay: true\n                });\n                break;\n            case 'pause':\n                audio.pause();\n                this.setState({\n                    isPlay: false\n                });\n                break;\n            case 'muted':\n                this.setState({\n                    isMuted: !audio.muted\n                });\n                audio.muted = !audio.muted;\n                break;\n            case 'changeCurrentTime':\n                this.setState({\n                    currentTime: value\n                });\n\n                audio.currentTime = value;\n                if(value === audio.duration) {\n                    this.setState({\n                        isPlay: false\n                    });\n                }\n                break;\n            case 'getCurrentTime':\n                this.setState({\n                    currentTime: audio.currentTime\n                });\n\n                if (audio.currentTime === audio.duration) {\n                    this.setState({\n                        isPlay: false\n                    });\n                }\n                break;\n            case 'changeVolume':\n                audio.volume = value / 100;\n                this.setState({\n                    volume: value,\n                    isMuted: !value\n                });\n                break;\n            default:\n                break;\n        }\n    }\n\n    handlePlay = () =>{\n        let { isPlay } = this.state\n        console.log(this.controlAudio)\n        document.getElementById(\"playBox\").addEventListener(\"click\", function () {\n            if(isPlay){\n                this.controlAudio(\"pause\", 0)\n            }else{\n                this.controlAudio(\"play\", 0)\n            }\n        })\n    }\n\n    componentDidMount() {\n        this.handlePlay()\n    }\n\n    render() {\n        let {isPlay, isMuted, volume, totalTime, currentTime} = this.state;\n        let audio_time = currentTime / totalTime * 100;\n\n        return(\n            <div>\n                <div className=\"main\">\n                    <audio\n                        id=\"audio\"\n                        src=\"./NewRomantics.flac\"\n                        preload=\"true\"\n                        onCanPlay={() => this.controlAudio('totalTime')}\n                        onTimeUpdate={(e) => this.controlAudio('getCurrentTime')}\n                    >\n                        您的浏览器不支持 audio 标签。\n                    </audio>\n                    <div className=\"headBox clearFix\">\n                        <div className=\"goBack\">\n                        <ArrowLeftOutlined />\n                        </div>\n\t\t\t\t        <div className=\"title\">\n\t\t\t\t\t        <p className=\"songName\" id=\"songName\">New Romantics</p>\n\t\t\t\t\t        <p className=\"singer\" id=\"singerName\">Taylor Swift</p>\n\t\t\t\t        </div>\n                    </div>\n                    <div className=\"discBox\">\n\t\t\t\t        <div className=\"volume\" id=\"volume\">\n\t\t\t\t\t        <div className=\"volBar\" id=\"volBar\">\n\t\t\t\t\t\t        <span className=\"volArc\"></span>\n\t\t\t\t\t        </div>\n\t\t\t\t\t        <div id=\"muteBtn\"><i id=\"volumeTag\"><SoundOutlined /></i></div>\n                            <div className=\"border\"></div>\n                            <div className=\"disc\"></div>\n                        </div>\n\t\t\t\t    </div>\n                    <div className=\"controlBox\">\n                        <div className=\"progressBox\">\n                            <div className=\"curTime\">0:00</div>\n                            <div className=\"progressBar\">\n                                <span className=\"progressArc\"></span>\n                            </div>\n                            <div className=\"totalTime\">3:50</div>\n                        </div>\n                        <div className=\"prev\"><StepBackwardOutlined style={{color:\"black\"}}/></div>\n                        <div id=\"playBox\">{ playn() }</div>\n                        <div className=\"next\"><StepForwardOutlined style={{color:\"black\"}}/></div>\n                    </div>\n                </div>\n                <div className=\"blur\">\n\t\t        </div>\n            </div>\n        )\n    }\n}\n\nexport default Content;"]},"metadata":{},"sourceType":"module"}