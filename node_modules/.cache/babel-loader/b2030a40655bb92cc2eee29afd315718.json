{"ast":null,"code":"var _jsxFileName = \"/Users/jaylon_ho/Documents/GitHub/My-Updated-Learning-of-FrontEnd/src/components/music/AutoPlay.js\";\nimport React, { Component } from \"react\";\n\nclass AutoPlay extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onCanPlay = () => {\n      const {\n        id\n      } = this.props;\n      const audio = document.getElementById(`audio${id}`);\n      this.setState({\n        allTime: audio.duration\n      });\n    };\n\n    this.playAudio = () => {\n      const {\n        id\n      } = this.props;\n      const audio = document.getElementById(`audio${id}`);\n      console.log(\"playing\");\n      audio.play().catch(error => {\n        console.log(error);\n      });\n      this.setState({\n        isPlay: true\n      });\n    };\n\n    this.pauseAudio = () => {\n      const {\n        id\n      } = this.props;\n      const audio = document.getElementById(`audio${id}`);\n      console.log(\"paused\");\n      audio.pause();\n      this.setState({\n        isPlay: false\n      });\n    };\n\n    this.onMuteAudio = () => {\n      const {\n        id\n      } = this.props;\n      const audio = document.getElementById(`audio${id}`);\n      this.setState({\n        isMuted: !audio.muted\n      });\n      audio.muted = !audio.muted;\n    };\n\n    this.changeTime = e => {\n      const {\n        value\n      } = e.target;\n      const {\n        id\n      } = this.props;\n      const audio = document.getElementById(`audio${id}`);\n      this.setState({\n        currentTime: value\n      });\n      audio.currentTime = value;\n\n      if (value === audio.duration) {\n        this.setState({\n          isPlay: false\n        });\n      }\n    };\n\n    this.onTimeUpdate = () => {\n      const {\n        id\n      } = this.props;\n      const audio = document.getElementById(`audio${id}`);\n      console.log(\"1\");\n      this.setState({\n        currentTime: audio.currentTime\n      });\n\n      if (audio.currentTime === audio.duration) {\n        this.setState({\n          isPlay: false\n        });\n      }\n    };\n\n    this.changeVolume = e => {\n      const {\n        value\n      } = e.target;\n      const {\n        id\n      } = this.props;\n      const audio = document.getElementById(`audio${id}`);\n      audio.volume = value / 100;\n      this.setState({\n        volume: value,\n        isMuted: !value\n      });\n    };\n\n    this.changePlayRate = num => {\n      this.audioDom.playbackRate = num;\n      this.setState({\n        playRate: num\n      });\n    };\n\n    this.state = {\n      rateList: [1.0, 1.25, 1.5, 2.0],\n      playRate: 1.0,\n      isPlay: false,\n      isMuted: false,\n      volume: 100,\n      allTime: 0,\n      currentTime: 0\n    };\n  }\n\n  componentDidMount() {}\n\n  formatSecond(time) {\n    const second = Math.floor(time % 60);\n    let minite = Math.floor(time / 60);\n    return `${minite}:${second >= 10 ? second : `0${second}`}`;\n  } // 该视频已准备好开始播放\n\n\n  render() {\n    const {\n      src,\n      id\n    } = this.props;\n    console.log(src);\n    const {\n      isPlay,\n      isMuted,\n      volume,\n      allTime,\n      currentTime,\n      rateList,\n      playRate\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"audio\", {\n      id: `audio${id}`,\n      src: src,\n      ref: audio => {\n        this.audioDom = audio;\n      },\n      preload: \"auto\",\n      onCanPlay: this.onCanPlay,\n      onTimeUpdate: this.onTimeUpdate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"track\", {\n      src: src,\n      kind: \"captions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    })), isPlay ? /*#__PURE__*/React.createElement(\"div\", {\n      onClick: this.pauseAudio,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    }, \"\\u6682\\u505C\") : /*#__PURE__*/React.createElement(\"div\", {\n      onClick: this.playAudio,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, \"\\u64AD\\u653E\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }, this.formatSecond(currentTime) + \"/\" + this.formatSecond(allTime)), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"range\",\n      step: \"0.01\",\n      max: allTime,\n      value: currentTime,\n      onChange: this.changeTime,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: this.onMuteAudio,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }\n    }, \"\\u9759\\u97F3\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }, \"\\u97F3\\u91CF\\u8C03\\u8282\\uFF1A\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"range\",\n      onChange: this.changeVolume,\n      value: isMuted ? 0 : volume,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }\n    }, \"\\u500D\\u901F\\u64AD\\u653E\\uFF1A\"), rateList && rateList.length > 0 && rateList.map(item => /*#__PURE__*/React.createElement(\"button\", {\n      key: item,\n      style: playRate === item ? {\n        border: \"1px solid #188eff\",\n        color: \"#188eff\"\n      } : null,\n      onClick: () => this.changePlayRate(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 15\n      }\n    }, item))));\n  }\n\n}\n\nexport default AutoPlay;","map":{"version":3,"sources":["/Users/jaylon_ho/Documents/GitHub/My-Updated-Learning-of-FrontEnd/src/components/music/AutoPlay.js"],"names":["React","Component","AutoPlay","constructor","props","onCanPlay","id","audio","document","getElementById","setState","allTime","duration","playAudio","console","log","play","catch","error","isPlay","pauseAudio","pause","onMuteAudio","isMuted","muted","changeTime","e","value","target","currentTime","onTimeUpdate","changeVolume","volume","changePlayRate","num","audioDom","playbackRate","playRate","state","rateList","componentDidMount","formatSecond","time","second","Math","floor","minite","render","src","length","map","item","border","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nclass AutoPlay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rateList: [1.0, 1.25, 1.5, 2.0],\n      playRate: 1.0,\n      isPlay: false,\n      isMuted: false,\n      volume: 100,\n      allTime: 0,\n      currentTime: 0,\n    };\n  }\n\n  componentDidMount() {}\n\n  formatSecond(time) {\n    const second = Math.floor(time % 60);\n    let minite = Math.floor(time / 60);\n    return `${minite}:${second >= 10 ? second : `0${second}`}`;\n  }\n\n  // 该视频已准备好开始播放\n  onCanPlay = () => {\n    const { id } = this.props;\n    const audio = document.getElementById(`audio${id}`);\n    this.setState({\n      allTime: audio.duration,\n    });\n  };\n\n  playAudio = () => {\n    const { id } = this.props;\n    const audio = document.getElementById(`audio${id}`);\n    console.log(\"playing\")\n    audio.play().catch(error=>{\n        console.log(error);\n    });\n    this.setState({\n      isPlay: true,\n    });\n  };\n\n  pauseAudio = () => {\n    const { id } = this.props;\n    const audio = document.getElementById(`audio${id}`);\n    console.log(\"paused\");\n    audio.pause();\n    this.setState({\n      isPlay: false,\n    });\n  };\n\n  onMuteAudio = () => {\n    const { id } = this.props;\n    const audio = document.getElementById(`audio${id}`);\n    this.setState({\n      isMuted: !audio.muted,\n    });\n    audio.muted = !audio.muted;\n  };\n\n  changeTime = (e) => {\n    const { value } = e.target;\n    const { id } = this.props;\n    const audio = document.getElementById(`audio${id}`);\n    this.setState({\n      currentTime: value,\n    });\n    audio.currentTime = value;\n    if (value === audio.duration) {\n      this.setState({\n        isPlay: false,\n      });\n    }\n  };\n\n  // 当前播放位置改变时执行\n  onTimeUpdate = () => {\n    const { id } = this.props;\n    const audio = document.getElementById(`audio${id}`);\n    console.log(\"1\");\n    this.setState({\n      currentTime: audio.currentTime,\n    });\n    if (audio.currentTime === audio.duration) {\n      this.setState({\n        isPlay: false,\n      });\n    }\n  };\n\n  changeVolume = (e) => {\n    const { value } = e.target;\n    const { id } = this.props;\n    const audio = document.getElementById(`audio${id}`);\n    audio.volume = value / 100;\n\n    this.setState({\n      volume: value,\n      isMuted: !value,\n    });\n  };\n\n  // 倍速播放\n  changePlayRate = (num) => {\n    this.audioDom.playbackRate = num;\n    this.setState({\n      playRate: num,\n    });\n  };\n\n  render() {\n    const { src, id } = this.props;\n    console.log(src)\n    const {\n      isPlay,\n      isMuted,\n      volume,\n      allTime,\n      currentTime,\n      rateList,\n      playRate,\n    } = this.state;\n\n    return (\n      <div>\n        <audio\n          id={`audio${id}`}\n          src={src}\n          ref={(audio) => {\n            this.audioDom = audio;\n          }}\n          preload={\"auto\"}\n          onCanPlay={this.onCanPlay}\n          onTimeUpdate={this.onTimeUpdate}\n        >\n          <track src={src} kind=\"captions\" />\n        </audio>\n\n        {isPlay ? (\n          <div onClick={this.pauseAudio}>暂停</div>\n        ) : (\n          <div onClick={this.playAudio}>播放</div>\n        )}\n\n        <div>\n          <span>\n            {this.formatSecond(currentTime) + \"/\" + this.formatSecond(allTime)}\n          </span>\n          <input\n            type=\"range\"\n            step=\"0.01\"\n            max={allTime}\n            value={currentTime}\n            onChange={this.changeTime}\n          />\n        </div>\n\n        <div onClick={this.onMuteAudio}>静音</div>\n\n        <div>\n          <span>音量调节：</span>\n          <input\n            type=\"range\"\n            onChange={this.changeVolume}\n            value={isMuted ? 0 : volume}\n          />\n        </div>\n\n        <div>\n          <span>倍速播放：</span>\n          {rateList &&\n            rateList.length > 0 &&\n            rateList.map((item) => (\n              <button\n                key={item}\n                style={\n                  playRate === item\n                    ? {\n                        border: \"1px solid #188eff\",\n                        color: \"#188eff\",\n                      }\n                    : null\n                }\n                onClick={() => this.changePlayRate(item)}\n              >\n                {item}\n              </button>\n            ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AutoPlay;\n"]},"metadata":{},"sourceType":"module"}